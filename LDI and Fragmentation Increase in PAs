# 📦 Load required packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(extrafont)  # For custom fonts
library(viridis)
library(scales)
library(patchwork)

# ⚙️ Font configuration
font_import(prompt = FALSE)  # May take some time when run for the first time
loadfonts(device = "win")    # Load Arial font

# 📂 Read data
data <- read.csv("E:/World_PA/图表new/LDI-PA/pca/柱形统计/Landscape_periods.csv")

# Clean NA values
data <- data %>% filter(!is.na(BIOME_NAME), !is.na(CONTINENT))
data <- data %>% distinct(FID, .keep_all = TRUE)

# 📋 Set parameters
time_periods <- c("2005_2000", "2010_2005", "2015_2010", "2020_2015", "2020_2000")
buffers <- paste0("buffer", 1:5)

# 📊 1. Overall summary for all samples
overall_stats <- expand.grid(buffer = buffers, period = time_periods, stringsAsFactors = FALSE) %>%
  rowwise() %>%
  mutate(
    buffer_col = paste0(buffer, "_", period),
    pc1_col = paste0("PC1_", period),
    total = sum(data[[buffer_col]] > 0, na.rm = TRUE),
    positive = sum(data[[buffer_col]] > 0 & data[[pc1_col]] > 0, na.rm = TRUE),
    proportion = ifelse(total > 0, positive / total, NA),
    Group = "Global"
  ) %>%
  ungroup()

# 📊 2. Grouped by biome
biome_stats <- lapply(buffers, function(buffer) {
  lapply(time_periods, function(period) {
    buffer_col <- paste0(buffer, "_", period)
    pc1_col <- paste0("PC1_", period)
    data %>%
      mutate(buffer_pos = .data[[buffer_col]] > 0,
             pc1_pos = .data[[pc1_col]] > 0) %>%
      group_by(Group = BIOME_NAME) %>%
      summarise(
        total = sum(buffer_pos, na.rm = TRUE),
        positive = sum(buffer_pos & pc1_pos, na.rm = TRUE),
        proportion = ifelse(total > 0, positive / total, NA),
        .groups = "drop"
      ) %>%
      mutate(buffer = buffer, period = period)
  }) %>% bind_rows()
}) %>% bind_rows()

# 📊 3. Grouped by continent
continent_stats <- lapply(buffers, function(buffer) {
  lapply(time_periods, function(period) {
    buffer_col <- paste0(buffer, "_", period)
    pc1_col <- paste0("PC1_", period)
    data %>%
      mutate(buffer_pos = .data[[buffer_col]] > 0,
             pc1_pos = .data[[pc1_col]] > 0) %>%
      group_by(Group = CONTINENT) %>%
      summarise(
        total = sum(buffer_pos, na.rm = TRUE),
        positive = sum(buffer_pos & pc1_pos, na.rm = TRUE),
        proportion = ifelse(total > 0, positive / total, NA),
        .groups = "drop"
      ) %>%
      mutate(buffer = buffer, period = period)
  }) %>% bind_rows()
}) %>% bind_rows()

# 📎 Combine all group results
all_data <- bind_rows(
  overall_stats %>% select(Group, buffer, period, proportion),
  continent_stats %>% select(Group, buffer, period, proportion),
  biome_stats %>% select(Group, buffer, period, proportion)
)

# Rename buffer labels to 1km–5km
all_data$buffer <- factor(all_data$buffer,
                          levels = paste0("buffer", 1:5),
                          labels = paste0(1:5, "km"))

# Save all proportion values
write.csv(all_data, 
          "E:/World_PA/图表new/LDI-PA/pca/柱形统计/Landscape_stats.csv", 
          row.names = FALSE)

# ✏️ Set factor levels
group_levels <- c("Global",
                  sort(unique(continent_stats$Group)),
                  sort(unique(biome_stats$Group)))
all_data$Group <- factor(all_data$Group, levels = group_levels)

ordered_periods <- c("2005_2000", "2010_2005", "2015_2010", "2020_2015", "2020_2000")
pretty_labels <- c("00–05", "05–10", "10–15", "15–20", "00–20")
all_data$period <- factor(all_data$period, levels = ordered_periods)

# 🎨 Custom color palette and theme
nc_palette <- c("#6BAED6", "#9ECAE1", "#A1D99B", "#FDAE6B", "#BCBDDC")

custom_theme <- theme_minimal(base_family = "Arial", base_size = 20) +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, face = "bold", size = 20),
    axis.text.y = element_text(face = "bold", size = 20),
    axis.title = element_text(face = "bold"),
    legend.title = element_text(face = "bold", size = 20),
    legend.text = element_text(face = "bold", size = 20),
    strip.text = element_text(face = "bold", size = 20),
    legend.position = "bottom"
  )

# 📊 Final plot
p <- ggplot(all_data, aes(x = period, y = proportion, fill = buffer)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~ Group, ncol = 3) +
  scale_fill_manual(values = nc_palette) +
  scale_x_discrete(labels = pretty_labels) +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
  labs(x = "Period", y = "Proportion", fill = "Distance") +
  custom_theme +
  labs(fill = "Distance")

print(p)

# 💾 Save the output plot
ggsave("E:/World_PA/图表new/LDI-PA/pca/柱形统计/PC1_buffer_Landscape.jpg",
       plot = p, width = 15, height = 22, dpi = 300, bg = "white")
