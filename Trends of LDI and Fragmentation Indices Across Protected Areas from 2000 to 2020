# Set working directory and read data
setwd("E:\\World_PA\\图表new\\which buffer")
data <- read.csv("AD.csv")

# Filter the data where the 'result' column has value 9
filtered_data <- data %>% filter(result == 9)

# Reshape the data into long format
long_data <- filtered_data %>%
  pivot_longer(
    cols = starts_with("buffer"),  # Select all columns starting with "buffer"
    names_to = "Year",             # Extract the year part from column names
    names_prefix = "buffer",      # Remove the prefix "buffer"
    values_to = "LDI"             # Store the values as LDI
  ) %>%
  pivot_longer(
    cols = starts_with("AD"),      # Select all columns starting with "AD"
    names_to = "Year_AD",          # Extract the year part for AD
    names_prefix = "AD",           # Remove the prefix "AD"
    values_to = "AD"               # Store the values as AD
  ) %>%
  mutate(Year = as.numeric(Year)) %>%       # Convert 'Year' column to numeric
  filter(as.numeric(Year_AD) == Year) %>%   # Keep rows where the years match
  select(-Year_AD)                        # Remove the temporary 'Year_AD' column

# Preprocess AD and LDI values
long_data <- long_data %>%
  mutate(
    AD = log(AD + 1),    
    AD = (AD - min(AD)) / (max(AD) - min(AD)),  # Normalize AD using log transformation and Min-Max scaling
    LDI = (LDI - min(LDI)) / (max(LDI) - min(LDI))  # Normalize LDI using Min-Max scaling
  )

# Get the list of unique continents for grouping
unique_continents <- unique(long_data$CONTINENT)

# Create a list to store plots for each continent
plot_list <- list()

# Loop through each continent to perform regression analysis and plotting
for (continent in unique_continents) {
  
  # Filter data for the current continent
  continent_data <- long_data %>% filter(CONTINENT == continent)
  
  # Create scatter plot with regression lines for the current continent, color-coded by 'FID_1'
  plot <- ggplot(continent_data, aes(x = LDI, y = AD, color = as.factor(FID_1))) +
    geom_point(alpha = 1, size = 1) +               # Scatter plot of points
    geom_smooth(method = "lm", se = FALSE, size = 0.8) +  # Add regression line without confidence interval
    labs(x = "LDI", y = "H_AD") +  # Set axis labels
    theme_minimal() +
    theme(
      axis.title = element_text(size = 12, family = "Arial", face = "bold"),   
      axis.title.y = element_text(size = 12, family = "Arial", face = "bold"),   # Y-axis title
      axis.text.x = element_text(size = 12, family = "Arial", face = "bold"),     # X-axis text
      axis.text.y = element_text(size = 12, family = "Arial", face = "bold"),     # Y-axis text
      plot.title = element_text(hjust = 0.5),  # Center the title
      legend.position = "none",               # Remove the legend
      panel.border = element_rect(color = "black", fill = NA, size = 0.5), # Add border around the plot
      panel.grid.major = element_blank(),     # Remove major grid lines
      panel.grid.minor = element_blank()      # Remove minor grid lines
    ) +
    scale_color_manual(values = rainbow(length(unique(continent_data$FID_1)))) +  # Assign unique colors for each 'FID_1'
    annotate("text", x = Inf, y = Inf, label = continent, hjust = 1.1, vjust = 1, 
             family = "Arial", face = "bold", size = 5)  # Annotate the continent name in the top-right corner
  
  # Add the plot for the current continent to the plot list
  plot_list[[continent]] <- plot
}

# Combine all plots into a single row using patchwork
combined_plot <- wrap_plots(plot_list, ncol = length(unique_continents))
print(combined_plot)

# Save the combined plot to a file
ggsave(filename = "Combined_Continents_Plot_AD.png", plot = combined_plot, width = 18, height = 3)
